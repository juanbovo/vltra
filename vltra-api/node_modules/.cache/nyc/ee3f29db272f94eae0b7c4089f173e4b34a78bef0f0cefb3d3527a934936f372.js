var cov_2mpss8ku1p=function(){var path="/Users/juampi/bootcamp/collab/skylab-bootcamp-201907/staff/juan-bovo/vltra/vltra-api/logic/user/unregister-user/index.js";var hash="76a370360fcb5dec2f0b8b0a92c6d744ce31ae88";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/juampi/bootcamp/collab/skylab-bootcamp-201907/staff/juan-bovo/vltra/vltra-api/logic/user/unregister-user/index.js",statementMap:{"0":{start:{line:1,column:29},end:{line:1,column:50}},"1":{start:{line:2,column:20},end:{line:2,column:42}},"2":{start:{line:3,column:15},end:{line:3,column:34}},"3":{start:{line:16,column:0},end:{line:32,column:1}},"4":{start:{line:18,column:4},end:{line:18,column:31}},"5":{start:{line:19,column:4},end:{line:19,column:35}},"6":{start:{line:20,column:4},end:{line:20,column:34}},"7":{start:{line:21,column:4},end:{line:21,column:41}},"8":{start:{line:23,column:4},end:{line:31,column:8}},"9":{start:{line:24,column:21},end:{line:24,column:50}},"10":{start:{line:25,column:8},end:{line:25,column:77}},"11":{start:{line:25,column:18},end:{line:25,column:77}},"12":{start:{line:27,column:22},end:{line:27,column:68}},"13":{start:{line:28,column:8},end:{line:28,column:56}},"14":{start:{line:28,column:19},end:{line:28,column:56}},"15":{start:{line:30,column:23},end:{line:30,column:63}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:16,column:17},end:{line:16,column:18}},loc:{start:{line:16,column:47},end:{line:32,column:1}},line:16},"1":{name:"(anonymous_1)",decl:{start:{line:23,column:11},end:{line:23,column:12}},loc:{start:{line:23,column:21},end:{line:31,column:5}},line:23}},branchMap:{"0":{loc:{start:{line:25,column:8},end:{line:25,column:77}},type:"if",locations:[{start:{line:25,column:8},end:{line:25,column:77}},{start:{line:25,column:8},end:{line:25,column:77}}],line:25},"1":{loc:{start:{line:28,column:8},end:{line:28,column:56}},type:"if",locations:[{start:{line:28,column:8},end:{line:28,column:56}},{start:{line:28,column:8},end:{line:28,column:56}}],line:28}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"76a370360fcb5dec2f0b8b0a92c6d744ce31ae88"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{models:{User}}=(cov_2mpss8ku1p.s[0]++,require('vltra-data'));const{validate}=(cov_2mpss8ku1p.s[1]++,require('vltra-utils'));const bcrypt=(cov_2mpss8ku1p.s[2]++,require('bcryptjs'));/**
 * Unregisters a user by their id
 * 
 * @param {string} id user's id on db. It comes from a token.
 * @param {string} email user's email
 * @param {string} password user password to compare with hash (user.password)
 * 
 * @returns {Promise}
*/cov_2mpss8ku1p.s[3]++;module.exports=function(id,email,password){cov_2mpss8ku1p.f[0]++;cov_2mpss8ku1p.s[4]++;validate.objectId(id,'id');cov_2mpss8ku1p.s[5]++;validate.string(email,'email');cov_2mpss8ku1p.s[6]++;validate.email(email,'email');cov_2mpss8ku1p.s[7]++;validate.string(password,'password');cov_2mpss8ku1p.s[8]++;return(async()=>{cov_2mpss8ku1p.f[1]++;const user=(cov_2mpss8ku1p.s[9]++,await User.findOne({email}));cov_2mpss8ku1p.s[10]++;if(!user){cov_2mpss8ku1p.b[0][0]++;cov_2mpss8ku1p.s[11]++;throw new Error(`user with email ${email} does not exist`);}else{cov_2mpss8ku1p.b[0][1]++;}const match=(cov_2mpss8ku1p.s[12]++,await bcrypt.compare(password,user.password));cov_2mpss8ku1p.s[13]++;if(!match){cov_2mpss8ku1p.b[1][0]++;cov_2mpss8ku1p.s[14]++;throw new Error('wrong credentials');}else{cov_2mpss8ku1p.b[1][1]++;}const result=(cov_2mpss8ku1p.s[15]++,await User.deleteOne({_id:id,email}));})();};