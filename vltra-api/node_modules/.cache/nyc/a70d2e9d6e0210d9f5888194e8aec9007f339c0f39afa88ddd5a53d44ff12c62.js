var cov_14diqtmy36=function(){var path="/Users/juampi/bootcamp/collab/skylab-bootcamp-201907/staff/juan-bovo/vltra/vltra-api/logic/comment/add-comment/index.spec.js";var hash="16c9e9db9ffd8ed8ecd88bdb99bc97b6132a35e1";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/juampi/bootcamp/collab/skylab-bootcamp-201907/staff/juan-bovo/vltra/vltra-api/logic/comment/add-comment/index.spec.js",statementMap:{"0":{start:{line:1,column:0},end:{line:1,column:26}},"1":{start:{line:3,column:19},end:{line:3,column:34}},"2":{start:{line:4,column:19},end:{line:4,column:31}},"3":{start:{line:5,column:54},end:{line:5,column:75}},"4":{start:{line:7,column:32},end:{line:7,column:39}},"5":{start:{line:9,column:0},end:{line:155,column:2}},"6":{start:{line:10,column:4},end:{line:10,column:48}},"7":{start:{line:10,column:18},end:{line:10,column:47}},"8":{start:{line:14,column:4},end:{line:47,column:6}},"9":{start:{line:15,column:8},end:{line:15,column:31}},"10":{start:{line:16,column:8},end:{line:16,column:31}},"11":{start:{line:17,column:8},end:{line:17,column:34}},"12":{start:{line:21,column:8},end:{line:21,column:38}},"13":{start:{line:22,column:8},end:{line:22,column:44}},"14":{start:{line:23,column:8},end:{line:23,column:46}},"15":{start:{line:24,column:8},end:{line:24,column:50}},"16":{start:{line:25,column:8},end:{line:25,column:41}},"17":{start:{line:26,column:8},end:{line:26,column:22}},"18":{start:{line:27,column:8},end:{line:27,column:18}},"19":{start:{line:29,column:21},end:{line:29,column:125}},"20":{start:{line:30,column:8},end:{line:30,column:24}},"21":{start:{line:34,column:8},end:{line:34,column:40}},"22":{start:{line:35,column:8},end:{line:35,column:38}},"23":{start:{line:36,column:8},end:{line:36,column:23}},"24":{start:{line:37,column:8},end:{line:37,column:23}},"25":{start:{line:38,column:8},end:{line:38,column:21}},"26":{start:{line:39,column:8},end:{line:39,column:18}},"27":{start:{line:41,column:21},end:{line:41,column:85}},"28":{start:{line:42,column:8},end:{line:42,column:24}},"29":{start:{line:45,column:8},end:{line:45,column:30}},"30":{start:{line:46,column:8},end:{line:46,column:52}},"31":{start:{line:49,column:4},end:{line:62,column:6}},"32":{start:{line:50,column:24},end:{line:50,column:76}},"33":{start:{line:52,column:26},end:{line:52,column:33}},"34":{start:{line:54,column:21},end:{line:54,column:48}},"35":{start:{line:56,column:8},end:{line:56,column:38}},"36":{start:{line:57,column:8},end:{line:57,column:48}},"37":{start:{line:58,column:8},end:{line:58,column:66}},"38":{start:{line:59,column:8},end:{line:59,column:81}},"39":{start:{line:60,column:8},end:{line:60,column:66}},"40":{start:{line:61,column:8},end:{line:61,column:53}},"41":{start:{line:64,column:4},end:{line:74,column:6}},"42":{start:{line:65,column:26},end:{line:65,column:529}},"43":{start:{line:67,column:8},end:{line:73,column:9}},"44":{start:{line:68,column:28},end:{line:68,column:79}},"45":{start:{line:71,column:12},end:{line:71,column:34}},"46":{start:{line:72,column:12},end:{line:72,column:92}},"47":{start:{line:76,column:4},end:{line:86,column:6}},"48":{start:{line:77,column:28},end:{line:77,column:54}},"49":{start:{line:79,column:8},end:{line:85,column:9}},"50":{start:{line:80,column:28},end:{line:80,column:85}},"51":{start:{line:83,column:12},end:{line:83,column:34}},"52":{start:{line:84,column:12},end:{line:84,column:89}},"53":{start:{line:88,column:4},end:{line:97,column:6}},"54":{start:{line:90,column:8},end:{line:96,column:9}},"55":{start:{line:91,column:28},end:{line:91,column:69}},"56":{start:{line:94,column:12},end:{line:94,column:34}},"57":{start:{line:95,column:12},end:{line:95,column:95}},"58":{start:{line:99,column:4},end:{line:108,column:6}},"59":{start:{line:101,column:8},end:{line:107,column:9}},"60":{start:{line:102,column:28},end:{line:102,column:76}},"61":{start:{line:105,column:12},end:{line:105,column:34}},"62":{start:{line:106,column:12},end:{line:106,column:104}},"63":{start:{line:110,column:4},end:{line:119,column:6}},"64":{start:{line:112,column:8},end:{line:118,column:9}},"65":{start:{line:113,column:28},end:{line:113,column:70}},"66":{start:{line:116,column:12},end:{line:116,column:34}},"67":{start:{line:117,column:12},end:{line:117,column:98}},"68":{start:{line:121,column:4},end:{line:130,column:6}},"69":{start:{line:123,column:8},end:{line:129,column:9}},"70":{start:{line:124,column:28},end:{line:124,column:71}},"71":{start:{line:127,column:12},end:{line:127,column:34}},"72":{start:{line:128,column:12},end:{line:128,column:75}},"73":{start:{line:132,column:4},end:{line:141,column:6}},"74":{start:{line:134,column:8},end:{line:140,column:9}},"75":{start:{line:135,column:28},end:{line:135,column:78}},"76":{start:{line:138,column:12},end:{line:138,column:34}},"77":{start:{line:139,column:12},end:{line:139,column:94}},"78":{start:{line:143,column:4},end:{line:152,column:6}},"79":{start:{line:145,column:8},end:{line:151,column:9}},"80":{start:{line:146,column:28},end:{line:146,column:72}},"81":{start:{line:149,column:12},end:{line:149,column:34}},"82":{start:{line:150,column:12},end:{line:150,column:88}},"83":{start:{line:154,column:4},end:{line:154,column:38}},"84":{start:{line:154,column:16},end:{line:154,column:37}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:42},end:{line:9,column:43}},loc:{start:{line:9,column:48},end:{line:155,column:1}},line:9},"1":{name:"(anonymous_1)",decl:{start:{line:10,column:11},end:{line:10,column:12}},loc:{start:{line:10,column:18},end:{line:10,column:47}},line:10},"2":{name:"(anonymous_2)",decl:{start:{line:14,column:15},end:{line:14,column:16}},loc:{start:{line:14,column:27},end:{line:47,column:5}},line:14},"3":{name:"(anonymous_3)",decl:{start:{line:49,column:47},end:{line:49,column:48}},loc:{start:{line:49,column:59},end:{line:62,column:5}},line:49},"4":{name:"(anonymous_4)",decl:{start:{line:64,column:62},end:{line:64,column:63}},loc:{start:{line:64,column:74},end:{line:74,column:5}},line:64},"5":{name:"(anonymous_5)",decl:{start:{line:76,column:40},end:{line:76,column:41}},loc:{start:{line:76,column:52},end:{line:86,column:5}},line:76},"6":{name:"(anonymous_6)",decl:{start:{line:88,column:45},end:{line:88,column:46}},loc:{start:{line:88,column:57},end:{line:97,column:5}},line:88},"7":{name:"(anonymous_7)",decl:{start:{line:99,column:49},end:{line:99,column:50}},loc:{start:{line:99,column:61},end:{line:108,column:5}},line:99},"8":{name:"(anonymous_8)",decl:{start:{line:110,column:55},end:{line:110,column:56}},loc:{start:{line:110,column:67},end:{line:119,column:5}},line:110},"9":{name:"(anonymous_9)",decl:{start:{line:121,column:43},end:{line:121,column:44}},loc:{start:{line:121,column:55},end:{line:130,column:5}},line:121},"10":{name:"(anonymous_10)",decl:{start:{line:132,column:47},end:{line:132,column:48}},loc:{start:{line:132,column:59},end:{line:141,column:5}},line:132},"11":{name:"(anonymous_11)",decl:{start:{line:143,column:53},end:{line:143,column:54}},loc:{start:{line:143,column:65},end:{line:152,column:5}},line:143},"12":{name:"(anonymous_12)",decl:{start:{line:154,column:10},end:{line:154,column:11}},loc:{start:{line:154,column:16},end:{line:154,column:37}},line:154}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"16c9e9db9ffd8ed8ecd88bdb99bc97b6132a35e1"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_14diqtmy36.s[0]++;require('dotenv').config();const{expect}=(cov_14diqtmy36.s[1]++,require('chai'));const addComment=(cov_14diqtmy36.s[2]++,require('.'));const{database,models:{User,Post,Comment}}=(cov_14diqtmy36.s[3]++,require('vltra-data'));const{env:{DB_URL_TEST}}=(cov_14diqtmy36.s[4]++,process);cov_14diqtmy36.s[5]++;describe('logic - add comment to a post',()=>{cov_14diqtmy36.f[0]++;cov_14diqtmy36.s[6]++;before(()=>{cov_14diqtmy36.f[1]++;cov_14diqtmy36.s[7]++;return database.connect(DB_URL_TEST);});let commentAuthor,commentBody,commentDate,postId,userId;cov_14diqtmy36.s[8]++;beforeEach(async()=>{cov_14diqtmy36.f[2]++;cov_14diqtmy36.s[9]++;await User.deleteMany();cov_14diqtmy36.s[10]++;await Post.deleteMany();cov_14diqtmy36.s[11]++;await Comment.deleteMany();let name,surname,nickname,email,password,bookmarks,voted;cov_14diqtmy36.s[12]++;name=`name-${Math.random()}`;cov_14diqtmy36.s[13]++;surname=`surname-${Math.random()}`;cov_14diqtmy36.s[14]++;nickname=`nickname-${Math.random()}`;cov_14diqtmy36.s[15]++;email=`email-${Math.random()}@email.com`;cov_14diqtmy36.s[16]++;password=`123-${Math.random()}`;cov_14diqtmy36.s[17]++;bookmarks=[];cov_14diqtmy36.s[18]++;voted=[];const user=(cov_14diqtmy36.s[19]++,await User.create({name,surname,nickname:nickname.substr(0,20),email,password,bookmarks,voted}));cov_14diqtmy36.s[20]++;userId=user.id;let title,body,author,date,comments,votes;cov_14diqtmy36.s[21]++;title=`title-${Math.random()}`;cov_14diqtmy36.s[22]++;body=`body-${Math.random()}`;cov_14diqtmy36.s[23]++;author=userId;cov_14diqtmy36.s[24]++;date=new Date();cov_14diqtmy36.s[25]++;comments=[];cov_14diqtmy36.s[26]++;votes=[];const post=(cov_14diqtmy36.s[27]++,await Post.create({title,body,author,date,comments,votes}));cov_14diqtmy36.s[28]++;postId=post.id;cov_14diqtmy36.s[29]++;commentAuthor=userId;cov_14diqtmy36.s[30]++;commentBody=`commentBody-${Math.random()}`;});cov_14diqtmy36.s[31]++;it('should add a comment on correct data',async()=>{cov_14diqtmy36.f[3]++;const comment=(cov_14diqtmy36.s[32]++,await addComment(postId,commentAuthor,commentBody));const commentId=(cov_14diqtmy36.s[33]++,comment);const post=(cov_14diqtmy36.s[34]++,await Post.findById(postId));cov_14diqtmy36.s[35]++;expect(post.comments).to.exist;cov_14diqtmy36.s[36]++;expect(post.comments.length).to.equal(1);cov_14diqtmy36.s[37]++;expect(post.comments[0].id.toString()).to.equal(commentId);cov_14diqtmy36.s[38]++;expect(post.comments[0].commentAuthor.toString()).to.equal(commentAuthor);cov_14diqtmy36.s[39]++;expect(post.comments[0].commentBody).to.equal(commentBody);cov_14diqtmy36.s[40]++;expect(post.comments[0].commentDate).to.exist;});cov_14diqtmy36.s[41]++;it('should fail if commentBody is larger than 500 chars',async()=>{cov_14diqtmy36.f[4]++;const largerBody=(cov_14diqtmy36.s[42]++,'83vZi1r0qqHKMcvMf0kKj5vDKfa8tnohh180XduYZYWww0GSjj7ldu4cOc9dZVIa0eaoA0BFehS0hYkF7gv8fOcOMA2sRV2DaI70SD9WD2m5kDEaHIjiiDsHy7QcRIByvvhAmgF8ACZEcMyC11L5eM28kEXH9Uhk7yND4ePpMNlvDbEhkvcN3IER71Pu3FHSnUM79fMBaXKmo25I7OfSNj3jt49cJEj2V4T2HoRRT9kdVfxeEQt1RrP3hGagcKwvDxdtU3W7Dyx8vpNI828KYp1f7EDSoVxcSUqUXHnkqCM3A3psphSiTKJnTsyiAhk5VOQr5W1MeyI1RhkheumphNjHv3UgXhehCadJaxF3i43nI1PkhovCNSxWXxCsJg7I4uC0ZUhCMymZEFjR8Xweg5ZvXW5gpodXL27lQlWfl2b9225fxhAl4APcuxqAOIYLHiYqJ1kXgnFKNSGd9ckNhUFvSPYO81FsS1vZXpdx7juLk6XOXl1HI');cov_14diqtmy36.s[43]++;try{const comment=(cov_14diqtmy36.s[44]++,await addComment(postId,commentAuthor,largerBody));//throw new Error('should not reach this point')
}catch(error){cov_14diqtmy36.s[45]++;expect(error).to.exist;cov_14diqtmy36.s[46]++;expect(error.message).to.equal('comments larger than 500 chars are not allowed');}});cov_14diqtmy36.s[47]++;it('should fail unexistant postId',async()=>{cov_14diqtmy36.f[5]++;const wrongPostId=(cov_14diqtmy36.s[48]++,'5d72794a24912c10b5c089e1');//--> 5d72794a24914c10b5c089e1
cov_14diqtmy36.s[49]++;try{const comment=(cov_14diqtmy36.s[50]++,await addComment(wrongPostId,commentAuthor,commentBody));//throw new Error('should not reach this point')
}catch(error){cov_14diqtmy36.s[51]++;expect(error).to.exist;cov_14diqtmy36.s[52]++;expect(error.message).to.equal(`post with id ${wrongPostId} does not exists`);}});cov_14diqtmy36.s[53]++;it('should fail on empty commentAuthor',async()=>{cov_14diqtmy36.f[6]++;cov_14diqtmy36.s[54]++;try{const comment=(cov_14diqtmy36.s[55]++,await addComment(postId,'',commentBody));//throw new Error('should not reach this point')
}catch(error){cov_14diqtmy36.s[56]++;expect(error).to.exist;cov_14diqtmy36.s[57]++;expect(error.message).to.equal(`commentAuthor with value  is not a valid ObjectId`);}});cov_14diqtmy36.s[58]++;it('should fail on undefined commentAuthor',async()=>{cov_14diqtmy36.f[7]++;cov_14diqtmy36.s[59]++;try{const comment=(cov_14diqtmy36.s[60]++,await addComment(postId,undefined,commentBody));//throw new Error('should not reach this point')
}catch(error){cov_14diqtmy36.s[61]++;expect(error).to.exist;cov_14diqtmy36.s[62]++;expect(error.message).to.equal(`commentAuthor with value undefined is not a valid ObjectId`);}});cov_14diqtmy36.s[63]++;it('should fail on wrong commentAuthor data type',async()=>{cov_14diqtmy36.f[8]++;cov_14diqtmy36.s[64]++;try{const comment=(cov_14diqtmy36.s[65]++,await addComment(postId,123,commentBody));//throw new Error('should not reach this point')
}catch(error){cov_14diqtmy36.s[66]++;expect(error).to.exist;cov_14diqtmy36.s[67]++;expect(error.message).to.equal(`commentAuthor with value 123 is not a valid ObjectId`);}});cov_14diqtmy36.s[68]++;it('should fail on empty commentBody',async()=>{cov_14diqtmy36.f[9]++;cov_14diqtmy36.s[69]++;try{const comment=(cov_14diqtmy36.s[70]++,await addComment(postId,commentAuthor,''));//throw new Error('should not reach this point')
}catch(error){cov_14diqtmy36.s[71]++;expect(error).to.exist;cov_14diqtmy36.s[72]++;expect(error.message).to.equal(`commentBody is empty or blank`);}});cov_14diqtmy36.s[73]++;it('should fail on undefined commentBody',async()=>{cov_14diqtmy36.f[10]++;cov_14diqtmy36.s[74]++;try{const comment=(cov_14diqtmy36.s[75]++,await addComment(postId,commentAuthor,undefined));//throw new Error('should not reach this point')
}catch(error){cov_14diqtmy36.s[76]++;expect(error).to.exist;cov_14diqtmy36.s[77]++;expect(error.message).to.equal(`commentBody with value undefined is not a string`);}});cov_14diqtmy36.s[78]++;it('should fail on wrong commentBody data type',async()=>{cov_14diqtmy36.f[11]++;cov_14diqtmy36.s[79]++;try{const comment=(cov_14diqtmy36.s[80]++,await addComment(postId,commentAuthor,123));//throw new Error('should not reach this point')
}catch(error){cov_14diqtmy36.s[81]++;expect(error).to.exist;cov_14diqtmy36.s[82]++;expect(error.message).to.equal(`commentBody with value 123 is not a string`);}});cov_14diqtmy36.s[83]++;after(()=>{cov_14diqtmy36.f[12]++;cov_14diqtmy36.s[84]++;return database.disconnect();});});