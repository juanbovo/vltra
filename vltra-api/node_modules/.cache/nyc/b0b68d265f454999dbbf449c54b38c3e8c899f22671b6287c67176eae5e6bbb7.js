var cov_4rpfbvgol=function(){var path="/Users/juampi/bootcamp/collab/skylab-bootcamp-201907/staff/juan-bovo/vltra/vltra-api/logic/user/authenticate-user/index.js";var hash="1d180fcaf2a56e98e40c3bd6feb5e42ec2652109";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/juampi/bootcamp/collab/skylab-bootcamp-201907/staff/juan-bovo/vltra/vltra-api/logic/user/authenticate-user/index.js",statementMap:{"0":{start:{line:1,column:29},end:{line:1,column:50}},"1":{start:{line:2,column:20},end:{line:2,column:42}},"2":{start:{line:3,column:15},end:{line:3,column:34}},"3":{start:{line:14,column:0},end:{line:31,column:1}},"4":{start:{line:15,column:4},end:{line:15,column:34}},"5":{start:{line:16,column:4},end:{line:16,column:41}},"6":{start:{line:18,column:4},end:{line:30,column:8}},"7":{start:{line:20,column:21},end:{line:20,column:50}},"8":{start:{line:22,column:8},end:{line:22,column:77}},"9":{start:{line:22,column:18},end:{line:22,column:77}},"10":{start:{line:25,column:22},end:{line:25,column:68}},"11":{start:{line:27,column:8},end:{line:27,column:56}},"12":{start:{line:27,column:19},end:{line:27,column:56}},"13":{start:{line:29,column:8},end:{line:29,column:22}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:14,column:17},end:{line:14,column:18}},loc:{start:{line:14,column:44},end:{line:31,column:1}},line:14},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:12},end:{line:18,column:13}},loc:{start:{line:18,column:24},end:{line:30,column:5}},line:18}},branchMap:{"0":{loc:{start:{line:22,column:8},end:{line:22,column:77}},type:"if",locations:[{start:{line:22,column:8},end:{line:22,column:77}},{start:{line:22,column:8},end:{line:22,column:77}}],line:22},"1":{loc:{start:{line:27,column:8},end:{line:27,column:56}},type:"if",locations:[{start:{line:27,column:8},end:{line:27,column:56}},{start:{line:27,column:8},end:{line:27,column:56}}],line:27}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"1d180fcaf2a56e98e40c3bd6feb5e42ec2652109"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();const{models:{User}}=(cov_4rpfbvgol.s[0]++,require('vltra-data'));const{validate}=(cov_4rpfbvgol.s[1]++,require('vltra-utils'));const bcrypt=(cov_4rpfbvgol.s[2]++,require('bcryptjs'));/**
 * Authenticates a user by its credentials.
 * 
 * @param {string} email 
 * @param {string} password 
 * 
 * @returns {Promise}
 */cov_4rpfbvgol.s[3]++;module.exports=function(email,password){cov_4rpfbvgol.f[0]++;cov_4rpfbvgol.s[4]++;validate.email(email,'email');cov_4rpfbvgol.s[5]++;validate.string(password,'password');cov_4rpfbvgol.s[6]++;return(async()=>{cov_4rpfbvgol.f[1]++;const user=(cov_4rpfbvgol.s[7]++,await User.findOne({email}));cov_4rpfbvgol.s[8]++;if(!user){cov_4rpfbvgol.b[0][0]++;cov_4rpfbvgol.s[9]++;throw new Error(`user with email ${email} does not exist`);}else{cov_4rpfbvgol.b[0][1]++;}// if (user.password !== password) throw new Error('wrong credentials')
const match=(cov_4rpfbvgol.s[10]++,await bcrypt.compare(password,user.password));cov_4rpfbvgol.s[11]++;if(!match){cov_4rpfbvgol.b[1][0]++;cov_4rpfbvgol.s[12]++;throw new Error('wrong credentials');}else{cov_4rpfbvgol.b[1][1]++;}cov_4rpfbvgol.s[13]++;return user.id;})();};